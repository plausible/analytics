<.settings_tiles>
  <PlausibleWeb.Team.Notice.inviting_banner :if={
    @site_role in [:owner, :admin] and @my_team.setup_complete
  } />

  <.tile docs="users-roles">
    <:title>People</:title>
    <:subtitle>Invite your friends or coworkers</:subtitle>

    <.filter_bar filtering_enabled?={false}>
      <.button_link
        mt?={false}
        href={Routes.membership_path(@conn, :invite_member_form, @site.domain)}
      >
        Invite new member
      </.button_link>
    </.filter_bar>

    <PlausibleWeb.Team.Notice.team_members_notice :if={
      @site_role in [:owner, :admin] and @my_team.setup_complete
    } />

    <div class="flow-root">
      <ul class="divide-y divide-gray-200 dark:divide-gray-400">
        <%= for membership <- @memberships do %>
          <li class="py-4" id={"membership-#{membership.user.id}"}>
            <div class="flex items-center space-x-4">
              <div class="flex-shrink-0">
                <img
                  src={Plausible.Auth.User.profile_img_url(membership.user)}
                  class="h-8 w-8 rounded-full"
                />
              </div>
              <div class="flex-1 min-w-0">
                <p class="text-sm truncate">
                  <span class="font-medium text-gray-900 dark:text-gray-50">
                    {membership.user.name}
                  </span>
                  <br />
                  <span class="text-gray-500 dark:text-gray-400">
                    {membership.user.email}
                  </span>
                  <.styled_link
                    :if={ee?() and Plausible.Auth.is_super_admin?(@current_user)}
                    new_tab={true}
                    href={PlausibleWeb.Endpoint.url() <> "/crm/auth/user/#{membership.user.id}"}
                  >
                    CRM
                  </.styled_link>
                </p>
              </div>

              <.dropdown class="relative">
                <:button class="bg-transparent text-gray-800 dark:text-gray-100 hover:bg-gray-50 dark:hover:bg-gray-700 focus-visible:outline-gray-100 whitespace-nowrap truncate inline-flex items-center gap-x-2 font-medium rounded-md px-3.5 py-2.5 text-sm focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 disabled:bg-gray-400 dark:disabled:text-white dark:disabled:text-gray-400 dark:disabled:bg-gray-700">
                  {membership.role |> to_string() |> String.capitalize()}
                  <Heroicons.chevron_down mini class="size-4 mt-0.5" />
                </:button>
                <:menu class="max-w-60">
                  <%= if membership.role == :owner do %>
                    <.dropdown_item disabled={true}>
                      <div>Owner</div>
                      <div class="text-gray-500 dark:text-gray-400 text-xs/5">
                        Site owner cannot be assigned to any other role
                      </div>
                    </.dropdown_item>
                    <.dropdown_divider />
                    <.dropdown_item
                      :if={@conn.assigns[:site_role] == :owner}
                      class="text-red-600 dark:text-red-500 hover:text-red-600"
                      href={
                        Routes.membership_path(
                          @conn,
                          :transfer_ownership_form,
                          @site.domain
                        )
                      }
                    >
                      Transfer ownership
                    </.dropdown_item>
                  <% else %>
                    <.dropdown_item
                      href={
                        Routes.membership_path(
                          @conn,
                          :update_role_by_user,
                          @site.domain,
                          membership.user.id,
                          "editor"
                        )
                      }
                      method="put"
                      disabled={membership.role == "admin"}
                    >
                      <div>Admin</div>
                      <div class="text-gray-500 dark:text-gray-400 text-xs/5">
                        View stats and edit site settings
                      </div>
                    </.dropdown_item>
                    <.dropdown_item
                      href={
                        Routes.membership_path(
                          @conn,
                          :update_role_by_user,
                          @site.domain,
                          membership.user.id,
                          "viewer"
                        )
                      }
                      method="put"
                      disabled={membership.role == "viewer"}
                    >
                      <div>Viewer</div>
                      <div class="text-gray-500 dark:text-gray-400 text-xs/5">
                        View stats only
                      </div>
                    </.dropdown_item>
                    <.dropdown_divider />
                    <.dropdown_item
                      href={
                        Routes.membership_path(
                          @conn,
                          :remove_member_by_user,
                          @site.domain,
                          membership.user.id
                        )
                      }
                      class="text-red-600 hover:text-red-600"
                      method="delete"
                    >
                      Remove member
                    </.dropdown_item>
                  <% end %>
                </:menu>
              </.dropdown>
            </div>
          </li>
        <% end %>
      </ul>
    </div>
  </.tile>

  <.tile :if={Enum.count(@invitations) > 0}>
    <:title>Pending invitations</:title>
    <:subtitle>Waiting for new members to accept their invitations</:subtitle>

    <.table
      rows={@invitations}
      row_attrs={fn invitation -> %{id: "invitation-#{invitation.invitation_id}"} end}
    >
      <:thead>
        <.th>Email</.th>
        <.th hide_on_mobile>Role</.th>
        <.th invisible>Actions</.th>
      </:thead>
      <:tbody :let={invitation}>
        <.td>{invitation.email}</.td>
        <.td hide_on_mobile>{Phoenix.Naming.humanize(invitation.role)}</.td>
        <.td actions>
          <.delete_button
            href={
              Routes.invitation_path(
                @conn,
                :remove_invitation,
                @site.domain,
                invitation.invitation_id
              )
            }
            method="delete"
          />
        </.td>
      </:tbody>
    </.table>
  </.tile>
</.settings_tiles>
